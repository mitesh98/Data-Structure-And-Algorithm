Problem Description
Given an integer array A of size N. Return the highest product possible by multiplying 3 numbers from the array. NOTE: Solution will fit in a 32-bit signed integer.


Problem Constraints
1 <= N <= 5* 105


Input Format
The first and the only argument is an integer array A.


Output Format
Return an integer denoting the highest possible product.


Example Input
A = [0, -1, 3, 100, 70, 50]


Example Output
350000


Example Explanation
70 * 50 * 100 = 350000

==========================Solution Mitesh Kumar==============================================
int Solution::maxp3(vector<int> &A) {
    //If size less than 1
    if(A.size()==1)
        return(A[0]);
    else if(A.size()==2)
        return(A[0]*A[1]);
    else if(A.size()==2)
        return(A[0]*A[1]*A[2]);
    sort(A.begin(),A.end());
    int n=A.size()-1;
    //Only +ve
    if(A[0]>0)
        return(A[n]*A[n-1]*A[n-2]);
    //Only -ve
    else if(A[n]<0)
        return(A[n]*A[n-1]*A[n-2]);
    //Only one +ve
    if(A[n-1]<0)
        return(A[n]*A[0]*A[1]);
    //Only one -ve
    if(A[n-1]<0)
        return(A[n]*A[n-1]*A[n-2]);
    //Only two +ve
    if(A[n-2]<0)
        return(A[n]*A[0]*A[1]);
    //Only two -ve
    if(A[2]>0)
        return(max(A[n]*A[n-1]*A[n-2],A[0]*A[1]*A[n]));
    
    return(max(A[n]*A[n-1]*A[n-2],A[0]*A[1]*A[n]));
   
    
}

